%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (BlueGraphics) ()
%%Title: (Tribal Dragon.ai)
%%CreationDate: 9/5/2009 1:16 PM
%%Canvassize: 16383
%%BoundingBox: 1673 102 1994 676
%%HiResBoundingBox: 1673.4805 102.2881 1993.2148 675.5488
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 1827.1523 388 1827.1523 388
%AI3_TileBox: 1534.8125 6.16016 2118.4922 769.8398
%AI3_DocumentPreview: None
%AI5_ArtSize: 400 619
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 1148.5 887.5 1 1403 1030 18 0 0 49 117 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 72 128 8
%%BeginData: 6520 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD6CFFA8FD48FFA8FD46FF7DA8FD46FF7DA8FD3EFFA8A8FD06FF52
%A8FD3FFF7DA8FD05FF52A8FD3FFFA852FD04FFA827FD0AFFA8A8FD2AFFA8
%FD09FFA852FD04FF5252FD09FF7DA8FD2BFFA87DFD09FF52A8FFFFFF2752
%FD07FFA8527DFD2CFFA87DFD09FF52A8FFFF7DF8A8FD06FFA8527DFD2EFF
%27A8FD04FF52FFFFFFF8A8FFFFF827FD06FF52277DFD2FFF527DFFFFFF7D
%7DFFFFA827FFFF52F852FD05FF2752A8FD30FF277DFFFFFF527DFFFF5227
%FF7DF8F8FD04FF7DF87DFD32FF527DFFFFA8F8A8FFA8F87DA827F87DFFFF
%A82727A8FD33FFF87DFFFFF827FFFFF8F82727F827A8A827F852FD34FFA8
%F8A8FF27F8A8FF27FD05F85252F827A8FD35FF7DF85227F8F87DFD0AF852
%A87DA8A8FD32FF27FD14F82752A8FD2FFF27FD0CF8277DA87DA87D7D2727
%F8F8F82752A8FD2BFF52F8F827FD09F8A8FD0AFF7D52F8F8F852A8FD28FF
%52F8F87DA852FD07F87DFD0EFF5227F8F87DFD26FF27F827FFFFFFFD07F8
%27FD11FF7DF8F827FD23FFA827F852FF7D7D27FD08F8A8FFFFA8FD0FFF27
%F8F8A8FD1FFFA87DF8F8F87D27FD08F82727F8F85252A8FD10FF7DF8F8A8
%FD1BFF7D52FD0FF852A8FFA8A87DFD13FFA827F87DFD1AFF27FD08F8527D
%A827F8F8F87DFD1BFF27F8A8FD19FF27FD06F85252FFFFFFFD04F87DFF7D
%A8FD0CFFA87D7DFD09FFA827F8A8FD18FFA8F85252F8F87DFD04FF52F8F8
%27527D7DA8FD0EFF5227F8527DFD07FFA827F8FD18FFA827A8FF27A8FFFF
%FF7DFD04F87DFD13FFA827F8F8F8A8FD06FF7DF852FD17FFA87DFD06FF52
%F87DA82727FD15FFA8FD04F852FD06FF52F8A8FD16FF7DFD06FF5227FFFF
%7DF87DFD16FF52FD04F827A8FD05FFF852FD15FFA8A8FD05FF5252FFFFA8
%F827FFFFFFA8A8FD13FF27FD04F852FD05FFA8F8FD15FFA8A8FD04FF7D52
%FFFFFF27F852FFFF7D7DFFFFFF7DA8FD0FFF7DF8F827F8F852FD05FF2752
%FD19FF7D7DFD04FF52F852A852277D5252527DFD11FF2727FF7DF8F87DFD
%04FF5252FD17FF7D527DFFFFA85252FD07F82752FD13FF5252FFFF27F8F8
%FD04FFA827FD14FFA87D527DA8FD04FFA8FD0452277D7DFD17FF7DFFFFA8
%F8F852FD04FF52A8FD10FFA87D527D7DFD2AFF27F8F8A8FFFFFF7DA8FD0E
%FFA87D7D7DFD2DFF7DF8F852FD04FFA8FD0CFFFD04A8FD30FFF8F8F8A8FF
%FFA8FD41FF7DF8F87DFD44FF7DF8F827FD45FF27F8F8A8FD44FF7DF8F852
%FD44FFA827F827A8FD38FFA8FD0BFF52F8F87DFD37FF2752A8FD08FF7D27
%52F8F827FD34FFA87DFD04F8A8FD05FF7DFF27FD05F87DFD32FF52F8F827
%F8F8F8FD06FF52F827FD05F852FD30FFA827277DFFA827F827A8FD05FF27
%FD08F87DFD2EFFA8277DFFFF7D7DF8F8F852A8FD04FF52FD09F8FD2DFFA8
%52FFFFFF7DFD06F87DFD04FFFD0AF827FD2BFFA87DFD04FF52FD06F8A8FF
%FFFF7DF8F8F85227FD06F827A8FD29FFA8FD04FF7DF85252FD04F8FD04FF
%52F8F8F8A82727FD07F87DA8FD2CFFF827FFFFF8F8F852FFFFFFA8F8F8F8
%52A8F87D7DFD07F827527DA8FD28FF7DF8A8FF7D2727F827FFFFFF27F8F8
%F87DA8F8FFFF52FD0AF827A8A8FD25FF5252FFFF277DFF7DF87DFF27F8F8
%F852FF2752FFFFFFA82727F827275252A8A8FD28FF27A8FFA8F8FFFFA8FD
%07F8FF7DF8A8FD05FFA8FFA8FD2CFFA852FFFF7D52FFFFA8FD06F8FFFF27
%52FD35FFA852FFFF7D27FFFFA82727F8F8F8A8FF52F87DFD35FFA852FFFF
%7D52FFFFA87D27F8F8A8FF7DF8F827FD35FFA852FFFFA852FFFFA87DF8F8
%F87DFF27F8F8F87DFD35FFA8FFFFA87DFFFFFF7DF8F8F827FFFFF8F8F827
%FD35FFA8FFFFFF7DFFFFFF7D27F8F8F8A8FFA8F8F8F852FD3EFF27F8F852
%FFFF7DF8F8F8A8FD34FFA8A8FD07FFA827F852FFFFFF7DF8F8F8FD34FFA8
%52FD04FFA87DFFFF7DF827FD04FF52F8F827FD30FFA8FFFFFF27277DFFA8
%27F87DFFFF27F8A8FD04FF52F8F827FD2EFFA852FFFFFFA8F8F8527D27F8
%F8FFFF7DF8FD06FF52F8F87DFD2DFFF8F8FF7D7D52F87DFFFFFF27F852FF
%A8F8A8FD06FF7DF8F87DFD2BFF7D52527DFF27F852FD05FFF827FFFF27A8
%FD07FF7DF827FD2BFF52FF7DF8A8A8F8A8FD05FF52F8A8FF52A8FD08FF52
%F852FD2AFFA8FF52F852FF7D52FD05FF7DF8A8FF7DFD0AFF52F8A8FD2AFF
%A8F8F8F8A8FFF8F8527DFFFFA8F87DFD0CFFA82727FD2AFF27F8F8F852FF
%52F8F8F852FFA8F852FD0DFF7D27A8FD28FF27FD04F827FF52F82727F852
%FFF852FD0EFF527DFD26FFA827FD05F827FF52F8A8FFA827A85252FD0FFF
%52FD25FF7DF8F8277D5227F827FF5252FFFFFF52A82752FD0FFFA8A8FD23
%FFA8F827A8FFFFFFA8F827FF27A8FD04FFA85227FD0FFFA8FD24FFF827A8
%FD05FFF852A852FD04FFA8FF5227FD10FFA8FD22FF7DF8A8FD06FF277DA8
%7DFD06FF7D27FD33FF277DFFA8FD04FFA8F8FF7DA87DFD05FF7D27FD32FF
%7D52FF7D7DFD04FF7D52A8A87D52FD06FF27FD31FFA852FFFF5252FD04FF
%527D7DA85227FD06FF52A8FD30FFA8FFFFFFF852FD04FF27FF7DA8F852FD
%06FFA8FD30FFA8FFFFFF7DF827FFFFFF277DA87D52F827FD3BFF7DF8F87D
%FF52F8A87DA8FF7D27A8FD3AFF27FD05F852FF52FFFFFF7D7DFD3AFF52FD
%05F8A8A8A8FD04FF7DA8FD39FFFD05F827FFA8A8FD05FF277DFD37FFA827
%FD04F852FFA8FD06FF52F8A8FD36FFA8FD05F87DFD08FF7DF87DFD36FFA8
%F8F852F8F8A8FD09FFF87DFD36FFA8F8A8FF27F8A8FD09FF2752FD36FF7D
%52FFFF52F8A8FD09FF2752FD36FF527DFFFF52F8FD09FFA82727FD36FF52
%A8FFFF5227FD09FFA8F852FD36FF7DA8FFFF7D27FF7DFD08FF27F8FD36FF
%7DFFFFFF5227FF7DA8FD07FF7DF8A8FD34FF7D7DFFFFFF7D27FF52A8FD08
%FFF8A8FD34FFA8A8FFFFFF7D27FF7DA8FD08FF527DFD34FF7DFD04FFA8F8
%FF52A8FD08FF527DFD39FFA827A85252FD08FFA852FD3AFF27A87D27FD08
%FFA852FD3AFF7DA8FFF8FD09FF7DFD3AFF7D7DFFF852FD08FF7DA8FD39FF
%A852FF27F8A8FD07FFA8A8FD3AFF52A87DF852FD08FF7DFD3AFF7DA8FF27
%F852A8A87DFD04FFA8A8FD39FFA87DFF52FD04F827A8FFFFFFA8FD3BFFA8
%FFFF2752F8F8F8A8FD04FFA8FD3AFFA8FFFF525252F8F852FD05FFA8FD3A
%FFA8FFA8277D27F827FD43FF5252A8F8F87DFD43FF27A8A8F827FD43FFA8
%27FF7DF852FD43FF5252FF7DF8A8FD42FFA852A8FF5227FD43FF7D7DFFFF
%277DFD43FF7DFFFFFF27A8FD43FFA8FFFFA827FD47FF7D52FD47FF7D7DFD
%46FFA852A8FD46FF7DA8FD47FF7DFD48FFA8FD48FFA8FD12FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Tat 1\240Image) Ln
0 A
u
0 O
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
0 R
0.000031 0.000031 0.000031 0.000031 1 1 1 XA
0 J 0 j 1 w 4 M []0 d0 XR
1844.1875 362.7061 m
1840.2402 363.7012 1839.7891 368.1943 1837.7236 371.0713 C
1834.4189 360.3291 1845.7646 353.7275 1847.9902 345.5938 c
1856.0127 316.2891 1831.6221 293.8672 1832.3994 266.498 C
1840.002 290.585 1848.873 313.4023 1858.6396 335.3252 C
1869.3164 340.1436 1873.2539 327.1816 1876.1318 319.3545 C
1878.542 337.7471 1869.8828 345.3896 1855.5967 348.2559 c
1842.5713 350.8682 1853.0518 369.9072 1865.8643 367.2686 c
1882.4717 363.8486 1878.7637 322.8691 1884.1172 304.5244 c
1885.1709 300.916 1887.0918 295.627 1889.8203 292.7354 C
1884.5879 323.8232 1892.7393 367.1455 1868.9072 380.1982 C
1867.3398 360.1006 1844.1172 376.6045 1842.667 387.042 C
1837.7119 378.458 1851.9033 369.5342 1844.1875 362.7061 C
b
1822.5127 261.1738 m
1826.2656 288.5313 1847.6836 311.4307 1843.0469 339.5098 c
1841.0449 351.6357 1829.292 357.0479 1830.1182 372.5928 C
1821.5254 368.8301 1817.3018 358.8721 1816.8096 348.2559 C
1821.6563 349.9248 1820.1377 359.5186 1825.5557 359.6631 c
1830.542 359.7969 1828.0664 353.4746 1826.6963 350.1572 c
1823.1357 341.542 1812.0029 332.3545 1805.4004 329.2412 C
1795.3047 319.3115 1793.9443 300.6426 1781.8232 292.7354 C
1799.4473 299.0361 1802.46 324.0986 1822.8936 328.1006 c
1827.2432 328.9531 1831.8008 327.6191 1833.1602 324.6777 c
1838.959 312.1348 1828.8799 292.6152 1822.1318 287.792 c
1810.8828 279.7539 1807.5576 307.6572 1812.625 314.0313 C
1792.2275 294.8701 1802.7344 242.7998 1788.2881 216.6797 C
1799.7773 222.8691 1797.2549 251.7754 1807.3027 259.6514 c
1814.3574 265.1846 1814.8945 243.6602 1814.5264 235.6943 c
1813.5771 215.123 1824.2705 188.1563 1831.6396 166.8662 C
1830.1592 183.0098 1824.5537 194.958 1822.5127 209.8359 c
1820.2949 226.0029 1820.2988 245.0361 1822.5127 261.1738 c
b
1889.0615 179.416 m
1874.9023 202.3955 1876.2158 240.8516 1871.1895 272.9609 C
1856.1299 277.665 1854.1182 299.8291 1856.3564 316.3125 C
1855.9766 316.3125 1855.5967 316.3125 1855.2158 316.3125 C
1851.9277 307.1777 1847.3145 299.3691 1844.5684 289.6943 C
1856.8281 291.6201 1864.7334 268.5352 1867.0049 255.0898 c
1867.8984 249.7959 1865.7227 246.8994 1864.3428 244.0605 C
1875.1416 225.0732 1873.9561 194.0967 1889.0615 179.416 C
b
1832.0195 219.3428 m
1830.3604 228.0088 1830.1748 238.1982 1829.7373 246.7236 C
1829.2959 246.7852 1829.0615 246.6387 1828.9775 246.3428 C
1819.2139 193.6182 1850.0586 162.3154 1869.2861 131.1191 C
1863.4668 150.7803 1852.2959 165.0869 1843.4277 181.6973 C
1857.4912 164.1787 1873.8945 148.5117 1887.54 130.3604 c
1894.1387 121.5801 1898.7832 111.3643 1905.792 102.6006 C
1895.0381 136.3564 1866.707 154.5 1860.1592 191.2031 C
1845.6406 180.0166 1835.0342 203.6025 1832.0195 219.3428 c
b
*u
1 D
1727.2959 515.479 m
1736.374 521.7627 1742.9424 531.3428 1752.7695 536.8037 c
1752.9883 536.9268 1753.2979 537.1084 1753.6924 537.3359 c
1758.3438 540.0503 1761.6289 541.6729 1762.5469 540.7852 c
1765.667 537.7686 1756.4717 529.6758 1754.9697 527.855 c
1752.2188 524.5225 1754.5303 525.1069 1754.7119 521.5552 c
1755.1338 513.2764 1742.5859 520.1597 1741.4189 516.7144 c
1741.3916 516.6348 1741.4072 516.541 1741.4717 516.4253 c
1742.2773 514.9395 1748.9561 512.6343 1750.5898 512.2114 c
1761.4229 509.4097 1771.0322 510.7349 1779.001 512.4067 c
1790.79 514.8745 1801.3682 519.9141 1809.6484 526.999 c
1809.8906 527.207 1804.5977 525.4365 1801.6846 524.4233 c
1794.2334 521.8252 1779.2871 520.1348 1777.9307 520.897 C
1782.8096 523.1152 1788.5176 529.6328 1789.4443 534.4131 C
1785.79 531.063 1770.5439 518.1211 1767.1455 520.0132 c
1763.7139 521.9233 1769.1045 532.9004 1769.3359 533.3657 c
1769.8311 534.3682 1770.3281 535.4585 1770.8574 536.6138 c
1772.4482 540.0815 1774.0908 543.6631 1775.9365 545.4976 c
1777.8818 547.4297 1781.541 547.3975 1784.7725 547.373 c
1786.3125 547.3613 1787.7715 547.3477 1788.9697 547.5342 c
1792.9092 548.1372 1796.4199 550.0859 1799.4189 553.333 c
1799.5342 553.4531 1795.8252 552.6143 1793.5156 551.7954 c
1790.8623 550.8545 1788.1182 549.8823 1785.5088 550.0625 c
1783.4805 550.2061 1782.0938 550.9619 1781.6035 552.1924 c
1781.0791 553.5239 1781.6523 555.2295 1783.1797 556.8813 c
1786.1055 560.0366 1792.9209 564.2461 1797.5918 563.5938 c
1799.1719 563.3706 1800.5313 562.9473 1801.7275 562.5728 c
1803.167 562.1226 1804.4111 561.7324 1805.7607 561.7417 c
1813.0879 561.7861 1819.5879 565.8638 1823.9092 569.4707 c
1824.0967 569.6274 1821.1777 568.9951 1819.3066 568.562 c
1815.8291 567.7573 1812.2334 566.9219 1808.4902 567.5859 c
1806.1689 567.9966 1804.4717 569.165 1803.7061 570.8809 c
1802.8135 572.8877 1803.2549 575.4937 1804.957 578.2227 c
1809.6426 585.7524 1819.0137 589.1255 1826.1396 589.1504 c
1874.2979 589.3154 1928.8467 554.8154 1937.6973 497.1953 C
1945.8252 552.8394 1878.6318 598.5273 1834.8809 597.1875 c
1834.4561 597.3018 l
1834.7998 597.5747 l
1840.3545 601.9829 1846.2871 606.0171 1852.0225 609.9209 c
1865.9746 619.4102 1880.3887 629.2168 1891.0947 645.3984 c
1891.3994 645.8618 1871.335 628.8687 1859.3096 620.7803 c
1845.1982 611.2925 1834.1953 605.2915 1823.627 601.3232 c
1822.9355 601.0605 l
1823.3701 601.6582 l
1839.0986 623.2964 1844.1592 659.6768 1836.3799 675.3262 C
1838.8291 666.3584 1837.4678 652.1333 1832.1348 637.8774 c
1826.5908 623.0571 1818.3213 611.2231 1810.0244 606.2207 c
1809.5264 605.9209 l
1809.7002 606.4795 l
1813.0986 617.3315 1813.8096 627.5615 1811.8105 636.8794 c
1810.0605 645.0459 1806.1924 652.2373 1800.6025 657.7573 c
1800.3037 658.0498 1806.8281 644.332 1807.9258 635.9634 c
1809.2725 625.7192 1806.7871 616.459 1800.5361 608.4316 c
1798.5693 605.9033 1796.3662 603.7266 1793.7969 601.7744 c
1792.8291 601.0239 l
1789.8193 598.6592 1787.251 596.7632 1786.3584 597.4893 c
1785.8096 597.9399 1786.0684 599.1572 1787.2031 601.4512 c
1792.1973 611.5283 1793.623 624.0527 1792.5225 631.4497 c
1792.46 631.8633 1787.6074 614.5942 1782.6582 608.1309 c
1781.248 606.2852 1779.4443 604.3008 1776.9932 601.8887 c
1776.5771 601.4717 l
1774.1387 599.0137 1771.7109 596.813 1770.4912 597.3306 c
1769.2637 597.8506 1769.3691 602.271 1769.5947 607.147 c
1769.6348 608.0737 1769.6709 608.8047 1769.6631 609.1865 c
1769.4414 620.7446 1766.6445 631.1812 1761.5674 639.4331 c
1761.4033 639.6982 1762.0996 634.9238 1762.5029 632.02 c
1764.2236 619.5474 1766.1768 605.4058 1757.3232 591.1177 c
1753.7334 585.3193 1747.5293 580.0483 1742.9961 576.1987 c
1742.7266 575.9668 l
1737.1123 571.1997 1732.0273 567.0728 1726.5508 564.8125 c
1721.6689 562.7974 1714.0654 564.4463 1710.5039 559.7266 c
1706.9902 555.0708 1713.0889 548.3398 1712.8584 542.9961 c
1712.5713 536.3491 1709.5518 529.9575 1706.9463 523.9434 c
1706.4287 522.7476 1705.9316 521.6055 1705.4668 520.4873 C
1705.9424 522.1104 1708.6455 524.3848 1709.6455 525.7471 c
1712.2676 529.3213 1718.8105 547.6519 1723.4912 547.3115 c
1727.6299 547 1725.0488 541.8979 1727.1162 540.5396 c
1729.0381 539.2764 1730.3145 542.4121 1731.4951 543.6006 c
1734.2646 546.3911 1735.5674 544.7354 1738.3555 545.9814 c
1740.9316 547.1323 1739.7773 549.6201 1741.6504 551.1182 c
1744.3281 553.2578 1744.5605 549.8735 1746.4473 550.1255 c
1748.8789 550.4512 1749.2256 554.0396 1750.6309 555.708 c
1753.1221 558.6655 1753.085 557.0703 1755.5459 556.6055 c
1756.5127 556.4229 1755.917 555.0869 1757.335 555.3447 c
1758.3369 555.5273 1758.6797 557.8872 1759.5693 558.3628 c
1764.6563 561.0791 1763.167 552.1885 1762.0879 550.0107 c
1761.2266 548.2798 1758.1455 546.7529 1755.4248 545.4072 c
1744.8506 540.1802 1738.5898 530.6807 1730.5039 522.5303 c
1726.7617 518.7593 1722.5947 516.8052 1717.9404 514.4287 c
1714.1475 512.4912 1683.6885 503.4248 1673.7627 496.6265 C
1681.0381 498.4136 1688.2852 500.6211 1695.4131 502.9146 c
1704.6494 505.8867 1714.418 508.4497 1723.0791 512.9292 c
1724.5518 513.6909 1725.9512 514.5488 1727.2959 515.479 c
b
0 D
1766.8887 576.1016 m
1766.0732 574.0054 1765.2324 571.8374 1763.835 570.6143 c
1763.1855 570.0469 1762.1963 570.2061 1761.2402 570.3643 c
1760.8145 570.4365 1760.3799 570.5073 1759.9795 570.5112 c
1757.2002 570.5474 1754.4629 569.2881 1751.8135 568.0698 c
1749.7891 567.1367 1746.9795 566.2759 1746.0107 565.9658 C
1744.5459 567.7573 1760.0449 581.8799 1769.2588 580.8975 C
1768.249 579.5913 1767.5605 577.8213 1766.8887 576.1016 c
b
*U
1993.0859 428.4009 m
1977.5117 428.4917 1966.4004 432.0127 1956.9609 437.147 c
1932.415 450.4971 1928.1865 487.353 1913.8359 512.5674 c
1893.7422 547.874 1873.9414 548.1548 1859.5313 552.7334 c
1858.6406 553.0122 1857.4395 552.7285 1856.6113 552.0327 c
1855.959 551.4873 1855.6533 550.792 1855.7471 550.0693 c
1855.9189 548.771 1858.0645 547.7822 1859.7939 546.9844 c
1860.3203 546.7407 1860.7822 546.5278 1861.1006 546.3457 c
1871.3711 540.4067 1875.4736 527.9893 1882.2949 515.8315 c
1882.3828 515.6719 1882.5469 515.3037 1882.7559 514.8345 c
1884.1172 511.7539 1885.0654 510.0034 1885.9023 510.167 c
1886.7891 510.3398 1886.8027 512.3345 1886.7139 515.6055 c
1886.6826 516.6563 1886.6563 517.6533 1886.7051 518.3447 c
1886.8779 520.9375 1887.7246 522.8701 1889.0186 523.6455 c
1889.9629 524.2134 1891.1377 524.1865 1892.5117 523.5703 c
1899.4209 520.4722 1912.4346 480.3032 1914.5566 476.0923 C
1914.6992 475.8223 L
1915.4258 474.395 1917.6514 470.0645 1917.0088 468.1367 c
1916.8975 467.7954 1916.6973 467.5601 1916.4053 467.4136 c
1914.876 466.665 1913.7461 467.8613 1912.5449 469.1294 c
1911.5518 470.1797 1910.5273 471.2656 1909.2432 471.1416 C
1909.0869 471.124 L
1909.0479 470.9775 L
1908.7285 469.7676 1908.5781 468.438 1908.4316 467.1528 c
1908.1211 464.3823 1907.8242 461.7627 1905.9229 460.8628 c
1903.7197 459.8213 1902.1904 461 1900.5723 462.2549 c
1899.6475 462.9727 1898.6846 463.7134 1897.5859 464.0098 C
1897.2266 464.1074 L
1897.3105 463.749 L
1899.5811 454.1875 1897.9482 443.2891 1892.8389 433.8433 c
1887.4307 423.8525 1882.4404 419.5273 1877.9941 420.9849 c
1874.502 422.1377 1874.1699 429.1938 1875.0244 435.417 c
1875.1621 436.4009 1875.5479 437.8057 1875.9561 439.291 c
1876.8252 442.4556 1877.8086 446.0366 1877.002 447.6548 c
1876.3633 448.9316 1875.2549 449.3301 1874.1826 449.7109 c
1872.5781 450.2832 1871.0674 450.8237 1870.7822 454.1304 c
1870.668 455.46 1870.8809 457.3613 1871.085 459.2007 c
1871.4521 462.498 1871.7979 465.6191 1870.5713 466.5405 c
1869.9238 467.0195 1868.917 466.9043 1867.8535 466.7803 c
1866.4746 466.6206 1865.0518 466.4521 1864.2451 467.4937 c
1863.9746 467.8394 1863.8818 468.4248 1863.79 468.9878 c
1863.6602 469.7676 1863.5322 470.5791 1862.9072 470.8403 c
1860.7041 471.7622 1857.9111 468.7793 1855.665 466.377 c
1854.7607 465.4106 1853.9756 464.5771 1853.4697 464.2715 c
1852.3525 463.6064 1851.0684 463.252 1849.8271 462.9063 c
1848.8652 462.6406 1847.9561 462.3877 1847.123 462.002 c
1842.1016 459.6929 1837.1289 456.3335 1831.4639 451.4268 C
1831.1758 451.1782 L
1825.1426 445.957 1818.9072 440.5542 1814.9307 432.4116 C
1827.5625 445.9307 1843.4268 453.0488 v
1843.6699 453.1597 1844.002 453.2925 1844.3799 453.4565 c
1847.083 454.6401 1853.4131 457.4058 1856.1963 455.3584 c
1856.7324 454.9634 1857.2031 452.1045 1856.9053 450.1587 c
1856.7813 449.3701 1856.5469 448.8647 1856.2588 448.7627 c
1855.5049 448.5059 1854.875 449.1084 1854.2061 449.7466 c
1853.6436 450.2832 1853.0635 450.8369 1852.3574 450.9126 c
1850.6436 451.0898 1845.9531 448.5898 1845.7451 446.7285 c
1845.6787 446.1079 1845.9756 445.5625 1846.2686 445.0352 c
1846.5156 444.583 1846.751 444.1572 1846.7412 443.7144 c
1846.7197 442.4023 1844.9111 440.2305 1843.3115 438.3154 c
1842.3184 437.123 1841.374 435.9932 1840.9043 435.1289 c
1834.7842 423.9282 1830.4707 401.6777 1838.2852 389.0361 C
1838.7412 388.2979 L
1838.6973 389.166 L
1838.6309 390.4111 1838.4932 391.9229 1838.3477 393.5225 c
1837.8818 398.7173 1837.3008 405.1836 1838.1963 410.4805 c
1839.8232 420.1475 1844.8135 427.7798 1847.6426 431.4678 c
1847.8936 431.7954 1848.2012 432.2349 1848.5283 432.6953 c
1849.5967 434.207 1851.21 436.4897 1852.123 436.6533 c
1853.1338 436.835 1855.1865 435.7983 1855.4961 434.9473 c
1856.9229 431.0557 1855.665 428.4536 1854.2021 425.4487 c
1853.4746 423.9414 1852.7168 422.3857 1852.2422 420.5464 c
1849.1455 408.5303 1851.2627 391.2705 1856.7734 383.6074 C
1854.3477 404.6606 1856.4229 414.3193 v
1857.0703 417.3418 1859.751 426.1133 1862.1982 426.1089 c
1862.6631 426.1089 1862.9287 425.6567 1863.2393 425.1294 c
1863.5674 424.5708 1863.9395 423.9326 1864.6621 423.835 c
1865.1592 423.7642 1865.6504 424.1855 1866.1289 424.5933 c
1866.542 424.9478 1866.9717 425.3159 1867.2773 425.2578 c
1868.7529 424.9922 1870.0732 414.5581 1870.0918 411.3711 c
1870.123 404.9888 1867.7881 396.5664 1865.2383 392.1123 C
1869.5439 396.0947 1873.7725 405.7998 1875.3613 410.6802 C
1874.7324 398.2646 1871.1689 392.0508 V
1890.8369 383.6074 1894.6719 356.0439 1895.0635 344.7666 C
1900.0596 354.9932 1898.7852 372.5889 1895.8223 385.4541 c
1894.2441 392.3115 1891.3486 398.5566 1889.2422 404.5078 C
1899.2588 412.2266 1912.8496 429.6606 1913.8438 443.0762 C
1915.6025 439.4019 1915.4082 435.4614 v
1914.7783 422.4434 1900.7354 404.9873 1893.3525 398.1147 C
1895.5068 398.7744 1898.0146 400.9453 V
1916.3359 369.9551 1950.2168 355.6865 1961.6084 317.7666 C
1958.1504 363.6162 1926.0557 375.4053 1912.251 410.9097 C
1919.499 421.978 1921.7256 431.0957 1922.8154 434.6084 C
1937.5879 412.6929 1958.0557 419.0283 1993.0859 428.4009 C
b
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
