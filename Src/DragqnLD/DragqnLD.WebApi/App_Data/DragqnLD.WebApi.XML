<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DragqnLD.WebApi</name>
    </assembly>
    <members>
        <member name="T:DragqnLD.WebApi.App_Start.AutoMapperConfig">
            <summary>
            AutoMapper configuration
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.App_Start.AutoMapperConfig.ConfigureMapper">
            <summary>
            Configures the mapper.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.BundleConfig">
            <summary>
            Bundle configuration for the mvc homepage
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)">
            <summary>
            Registers the bundles.
            </summary>
            <param name="bundles">The bundles.</param>
        </member>
        <member name="T:DragqnLD.WebApi.FilterConfig">
            <summary>
            Filter configuration
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)">
            <summary>
            Registers the global filters.
            </summary>
            <param name="filters">The filters.</param>
        </member>
        <member name="T:DragqnLD.WebApi.App_Start.RavenDbConfig">
            <summary>
            Ravendb configuration
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.App_Start.RavenDbConfig.GetDocumentStore">
            <summary>
            Gets the document store.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DragqnLD.WebApi.RouteConfig">
            <summary>
            The MVC web page Route Configuration
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)">
            <summary>
            Registers the routes.
            </summary>
            <param name="routes">The routes.</param>
        </member>
        <member name="T:DragqnLD.WebApi.UnityConfig">
            <summary>
            Unity DI container configuration
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.UnityConfig.RegisterComponents">
            <summary>
            Registers the components.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.WebApiConfig">
            <summary>
            Web Api confiration
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the WebAPI into the specified configuration.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:DragqnLD.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:DragqnLD.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:DragqnLD.WebApi.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:DragqnLD.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:DragqnLD.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,DragqnLD.WebApi.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,DragqnLD.WebApi.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:DragqnLD.WebApi.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},DragqnLD.WebApi.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:DragqnLD.WebApi.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.#ctor(DragqnLD.WebApi.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,DragqnLD.WebApi.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:DragqnLD.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.Components.ActionSelectSimulator">
            <summary>
            Simulate the action selection and record the decision making process.
            
            This class is basically a copy of default IHttpActionSelector implementation (DefaultActionSelector) private members,
            and methods where we have included logging.
            The private members of the DefaultActionSelector are copied here, so we can access them.
            
            Some help internal help classes are also copied to assist the process,
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.Components.ActionSelectSimulator.Simulate(System.Web.Http.Controllers.HttpControllerContext)">
            <summary>
            Simulating the action selecting process. It mimics the ASP.NET Web API internal logic
            </summary>
            <param name="controllerContext">The controller context.</param>
            <returns>A structure contains the log of selecting process</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.Components.ActionSelectSimulator.FindActionsForVerb(System.Net.Http.HttpMethod)">
            <summary>
            This is a copy of the private ApiControllerActionSelector.FindActionsForVerb. It doesn't use the cache
            but copies the contents of the FindActionsForVerbWorker method.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.Components.ActionSelectSimulator.FindActionUsingRouteAndQueryParameters(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IEnumerable{System.Web.Http.Controllers.ReflectedHttpActionDescriptor},System.Boolean)">
            <summary>
            This is an exact copy from ApiControllerActionSelector.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.Components.ActionSelectSimulator.IsValidActionMethod(System.Reflection.MethodInfo)">
            <summary>
            This is an exact copy from ApiControllerActionSelector.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.Components.ActionSelectSimulator.IsSubset(System.String[],System.Collections.Generic.HashSet{System.String})">
            <summary>
            This is an exact copy from ApiControllerActionSelector.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.Components.ActionSelectSimulator.RunSelectionFilters(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IEnumerable{System.Web.Http.Controllers.HttpActionDescriptor})">
            <summary>
            Replace the private method from ApiControllerActionSelector.
            
            The IActionMethodSelector interface used in the method is internal so we must make a copy. 
            CacheAttrsIActionMethodSelector is also internal.
            The default implementation of IActionMethodSelector finds methods marked with the NonActionAttribute, so the
            code below is converted to directly filter out methods with that attribute.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.Components.DictionaryExtensions">
            <summary>
            An exact copy of the TryGetValue method from  DictionaryExtensions.cs.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.Components.DictionaryExtensions.TryGetValue``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,``0@)">
            <summary>
            Gets the value of <typeparamref name="T"/> associated with the specified key or <c>default</c> value if
            either the key is not present or the value is not of type <typeparamref name="T"/>. 
            </summary>
            <typeparam name="T">The type of the value associated with the specified key.</typeparam>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/> instance where <c>TValue</c> is <c>object</c>.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter.</param>
            <returns><c>true</c> if key was found, value is non-null, and value is of type <typeparamref name="T"/>; otherwise false.</returns>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.Components.HttpParameterBindingExtensions">
            <summary>
            A copy of HttpParameterBindingExtensions.cs with one change. HttpParameterBindingExtensions.WillReadUri calls the internal
            interface IUriValueProvderFactory, so that code is also in this method.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.Components.TypeHelper">
            <summary>
            A static class that provides various <see cref="T:System.Type"/> related helpers.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.Components.TypeHelper.OfType``1(System.Object[])">
            <summary>
            Fast implementation to get the subset of a given type.
            </summary>
            <typeparam name="T">type to search for</typeparam>
            <returns>subset of objects that can be assigned to T</returns>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.InspectActionInvoker">
            <summary>
            Hijacks the original invoker. It examines the header before 
            executing the action. If the inspect header exists, returns the inspection data in a 200 response.
            If the inspection header does not exist, the delegate calls the default InvokeActionAsync method.
            
            The inspection data saved in the request property are collected when the request is passed
            along the stack.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.InspectActionSelector">
             <summary>
             This class replaces ApiControllerActionSelector (it's hooked up in RouteDebuggerConfig.cs). 
             It uses  _innerSelector to call into ApiControllerActionSelector methods and it calls ActionSelectSimulator methods.
             Private members of ApiControllerActionSelector cannot be called with a delegate, so a copy of the private members of
             ApiControllerActionSelector are contained in the class ActionSelectSimulator.
            
             See http://www.asp.net/web-api/overview/web-api-routing-and-actions/routing-and-action-selection for more info.   
             
              The SelectAction method examines the request header. If an inspection header is found, it runs the 
              action selection simulator, saves the inspection data in the request property, then uses the delegate
              to run the ApiControllerActionSelector.SelectAction method.
             </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.InspectControllerSelector">
            <summary>
            This class replaces the DefaultHttpControllerSelector (see RouteDebuggerConfig.cs).  
            It uses _innerSelector to call into DefaultHttpControllerSelector methods.
            See http://www.asp.net/web-api/overview/web-api-routing-and-actions/routing-and-action-selection for more info.
            
            The SelectController method examines the request header. If an inspection header is found:
                1. Saves all candidate controllers in inspection data.
                2. Marks the selected controller.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.InspectHandler">
            <summary>
            Inspect handler saves route inspect data and handler error.
            
            If a request has inspect header, the handler will save all routes and route data to inspect data.
            
            If the return response is not 200. That may cause by 500 or 404, handler extract Inspect data from
            request property and set back the the response. The original response status is saved to the inspect 
            data and actual return response is always 200.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionInfo">
            <summary>
            Representing one action selection
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionInfo.FoundByActionName">
            <summary>
            Is this action selected based on its action name?
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionInfo.FoundByActionNameWithRightVerb">
            <summary>
            Is this action selected based on its action name and its supported http verb?
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionInfo.FoundByVerb">
            <summary>
            Is this action selected based on its supported http verb?
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionInfo.FoundWithRightParam">
            <summary>
            Do this action's parameters match the ones in query string?
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionInfo.FoundWithSelectorsRun">
            <summary>
            Is this action finally selected by selection attribute?
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionLog">
            <summary>
            Logs information collected when ActionSelectSimulator.Simulate is called. 
            ActionSelectSimulator.Simulate replaces DefaultActionSelector.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionLog.MarkSelected(System.Collections.Generic.IEnumerable{System.Web.Http.Controllers.HttpActionDescriptor},System.Action{DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionInfo})">
            <summary>
            Looks for related ActionSelectionInfo instances based on given action
            descriptors. Invoke given marking functor on each of them.
            
            This method is used in action simulator when a selection decision is 
            made in every stage, the selected action will be passed in along with
            a marking functor. The marking functor usually set a particular boolean
            property on related ActionSelectionInfo instance to mark that this action
            is selected in particular stage.
            </summary>
            <param name="actions">The actions to be marked.</param>
            <param name="marking">The functor picking the bool property of an action to be set to true.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionLog.MarkOthersSelected(System.Collections.Generic.IEnumerable{System.Web.Http.Controllers.HttpActionDescriptor},System.Action{DragqnLD.WebApi.Areas.RouteDebugger.Models.ActionSelectionInfo})">
            <summary>
            Counterpart of function MarkSelected, instead of marking selected action
            this method mark unselected action.
            </summary>
            <param name="actions">the actions NOT to be marked</param>
            <param name="marking">the functor picking the bool property of an action to be set to true.</param>
        </member>
        <member name="T:DragqnLD.WebApi.Areas.RouteDebugger.Models.HttpParameterDescriptorInfo">
            <summary>
            Represents the parameters.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.RequestHelper.IsInspectRequest(System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns true if this request is a inspect request. 
            
            For sake of security only inspect request from local will be accepted.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Areas.RouteDebugger.RequestHelper.IsFromLocal(System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns true if this request is from local
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Configuration.DragqnLdConfig">
            <summary>
            DragqnLd Server Configuration
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Configuration.DragqnLdConfig.DatabaseUrl">
            <summary>
            Gets the database URL.
            </summary>
            <value>
            The database URL.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Configuration.DragqnLdConfig.DatabaseName">
            <summary>
            Gets the name of the database.
            </summary>
            <value>
            The name of the database.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Configuration.DragqnLdConfig.Instance">
            <summary>
            Gets the instance of the configuration.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Connection.JsonContent">
            <summary>
            To write plain json to HttpResponseMessage
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.JsonContent.#ctor(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Connection.JsonContent"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.JsonContent.#ctor(Raven.Json.Linq.RavenJToken)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Connection.JsonContent"/> class.
            </summary>
            <param name="value">The RavenJToken value.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.JsonContent.GetJsonTextWriter(System.IO.Stream)">
            <summary>
            Gets the json text writer.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.JsonContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>
            Serialize the HTTP content to a stream as an asynchronous operation.
            </summary>
            <param name="stream">The target stream.</param>
            <param name="context">Information about the transport (channel binding token, for example). This parameter may be null.</param>
            <returns>
            Returns <see cref="T:System.Threading.Tasks.Task" />.The task object representing the asynchronous operation.
            </returns>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.JsonContent.GetRavenJsonTextWriter(System.IO.Stream)">
            <summary>
            Gets the raven specific json text writer.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.JsonContent.TryComputeLength(System.Int64@)">
            <summary>
            Determines whether the HTTP content has a valid length in bytes.
            </summary>
            <param name="length">The length in bytes of the HTTP content.</param>
            <returns>
            Returns <see cref="T:System.Boolean" />.true if <paramref name="length" /> is a valid length; otherwise, false.
            </returns>
        </member>
        <member name="T:DragqnLD.WebApi.Connection.PropertyUnescapingJsonTextWriter">
            <summary>
            Json text writer unescaping property names
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.PropertyUnescapingJsonTextWriter.#ctor(System.IO.TextWriter,DragqnLD.Core.Implementations.PropertyMapForUnescape)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Connection.PropertyUnescapingJsonTextWriter"/> class.
            </summary>
            <param name="textWriter">The text writer.</param>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.PropertyUnescapingJsonTextWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a Json object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.PropertyUnescapingJsonTextWriter.WritePropertyName(System.String,System.Boolean)">
            <summary>
            Writes the property name of a name/value pair on a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="escape">A flag to indicate whether the text should be escaped when it is written as a JSON property name.</param>
        </member>
        <member name="T:DragqnLD.WebApi.Connection.RavenPropertyUnescapingJsonTextWriter">
            <summary>
            Raven specific Json text writer unescaping property names
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.RavenPropertyUnescapingJsonTextWriter.#ctor(System.IO.TextWriter,DragqnLD.Core.Implementations.PropertyMapForUnescape)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Connection.RavenPropertyUnescapingJsonTextWriter"/> class.
            </summary>
            <param name="textWriter">The text writer.</param>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.RavenPropertyUnescapingJsonTextWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a Json object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="T:DragqnLD.WebApi.Connection.UnescapingJsonContent">
            <summary>
            To write plain json to HttpResponseMessage with unescaping property names
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.UnescapingJsonContent.#ctor(Newtonsoft.Json.Linq.JToken,DragqnLD.Core.Implementations.PropertyMapForUnescape)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Connection.UnescapingJsonContent"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.UnescapingJsonContent.#ctor(Raven.Json.Linq.RavenJToken,DragqnLD.Core.Implementations.PropertyMapForUnescape)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Connection.UnescapingJsonContent"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.UnescapingJsonContent.GetJsonTextWriter(System.IO.Stream)">
            <summary>
            Gets the json text writer.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Connection.UnescapingJsonContent.GetRavenJsonTextWriter(System.IO.Stream)">
            <summary>
            Gets the raven json text writer.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="T:DragqnLD.WebApi.Constants.Prefixes">
            <summary>
            Prefixes used around code
            </summary>
        </member>
        <member name="F:DragqnLD.WebApi.Constants.Prefixes.Query">
            <summary>
            The query definiton Id prefix
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Constants.RouteNames">
            <summary>
            Constants with route names
            </summary>
        </member>
        <member name="F:DragqnLD.WebApi.Constants.RouteNames.Contexts">
            <summary>
            The contexts route
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Controllers.BaseApiController">
            <summary>
            Base api controller
            </summary>
        </member>
        <member name="F:DragqnLD.WebApi.Controllers.BaseApiController.Log">
            <summary>
            The logger
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.BaseApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
            <summary>
            Executes asynchronously a single HTTP operation.
            </summary>
            <param name="controllerContext">The controller context for a single HTTP operation.</param>
            <param name="cancellationToken">The cancellation token assigned for the HTTP operation.</param>
            <returns>
            The newly started task.
            </returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.BaseApiController.CreateResponse(System.Net.HttpStatusCode)">
            <summary>
            Creates the response.
            </summary>
            <param name="status">The HTTP status code.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.BaseApiController.CreateResponseWithObject``1(``0,System.Net.HttpStatusCode)">
            <summary>
            Creates the response with object in content.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="status">The HTTP status code.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.BaseApiController.CreateJsonResponse(Raven.Json.Linq.RavenJObject,System.Net.HttpStatusCode)">
            <summary>
            Creates the json response.
            </summary>
            <param name="obj">The object.</param>
            <param name="status">The status.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.BaseApiController.CreateUnescapedJsonResponse(Raven.Json.Linq.RavenJObject,DragqnLD.Core.Implementations.PropertyMapForUnescape,System.Net.HttpStatusCode)">
            <summary>
            Creates the unescaped json response.
            </summary>
            <param name="obj">The object.</param>
            <param name="mappings">The mappings.</param>
            <param name="status">The status.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.BaseApiController.JsonContent(Raven.Json.Linq.RavenJToken)">
            <summary>
            Converts the data to a Json content.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.BaseApiController.UnescapedJsonContent(Raven.Json.Linq.RavenJObject,DragqnLD.Core.Implementations.PropertyMapForUnescape)">
            <summary>
            Converts the data to a Json content unescaping property names with provided mappings.
            </summary>
            <param name="content">The content.</param>
            <param name="mappings">The mappings.</param>
            <returns></returns>
        </member>
        <member name="P:DragqnLD.WebApi.Controllers.BaseApiController.Store">
            <summary>
            Ravendb Document Store to be used.
            </summary>
            <value>
            The document store.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Controllers.BaseApiController.Session">
            <summary>
            Gets the ravendb session to be used with this request.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Controllers.BaseApiController.DefinitionId">
            <summary>
            Gets the definition identifier from the route.
            </summary>
            <value>
            The definition identifier.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Controllers.ContextsController">
            <summary>
            Returns contexts for 
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.ContextsController.#ctor(DragqnLD.Core.Abstraction.IQueryStore)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Controllers.ContextsController"/> class.
            </summary>
            <param name="queryStore">The query store.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.ContextsController.Get">
            <summary>
            Gets the context for the specified definition identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DragqnLD.WebApi.Controllers.DocumentsController">
            <summary>
            Controller for reading Documents stored for a Query Definition
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.DocumentsController.#ctor(DragqnLD.Core.Abstraction.IDataStore,DragqnLD.WebApi.Services.IContextUrlProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Controllers.DocumentsController"/> class.
            </summary>
            <param name="dataStore">The data store.</param>
            <param name="contextUrlProvider">the context url provider for injecting @context urls into the documents</param>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.DocumentsController.Get(System.Int32,System.Int32)">
            <summary>
            Gets this document metadata of this query definition id.
            </summary>
            <param name="start">The start.</param>
            <param name="pageSize">Size of the page.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.DocumentsController.Get(System.String)">
            <summary>
            Gets the document for the specified query definition id.
            </summary>
            <param name="documentId">The document identifier.</param>
            <returns></returns>
        </member>
        <member name="T:DragqnLD.WebApi.Controllers.HomeController">
            <summary>
            The home page controller
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.HomeController.Index">
            <summary>
            The home page action
            </summary>
            <returns></returns>
        </member>
        <member name="T:DragqnLD.WebApi.Controllers.IndexesController">
            <summary>
            Indexes controller for index manipulation tasks
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.IndexesController.#ctor(DragqnLD.Core.Abstraction.IQueryStore)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Controllers.SearchController"/> class.
            </summary>
            <param name="queryStore">The data store.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.IndexesController.GetIndexes">
            <summary>
            Gets the indexes.
            </summary>
            <returns>List of IndexMetadataDto</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.IndexesController.GetIndex(System.String)">
            <summary>
            Gets the index definition.
            </summary>
            <param name="indexId">The index identifier.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.IndexesController.StoreIndex(DragqnLD.WebApi.Models.IndexDefinitionDto)">
            <summary>
            Stores the index.
            </summary>
            <param name="indexDefinition">The index definition.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.IndexesController.StoreOrUpdateIndex(System.String,DragqnLD.WebApi.Models.IndexDefinitionDto)">
            <summary>
            Stores or updates the index.
            </summary>
            <param name="indexId">The index identifier.</param>
            <param name="indexDefinition">The index definition.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.IndexesController.DeleteIndex(System.String)">
            <summary>
            Deletes the index.
            </summary>
            <param name="indexId">The index identifier.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.IndexesController.ProposeIndexForProperties(DragqnLD.WebApi.Models.PropertiesToIndexDto)">
            <summary>
            Proposes the index for properties.
            </summary>
            <param name="propertiesToIndex">Index of the properties to.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.IndexesController.ProposeIndexForSparql(DragqnLD.WebApi.Models.SparqlDto)">
            <summary>
            Proposes the index for sparql.
            </summary>
            <param name="sparql">The sparql.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.IndexesController.GetIndexableProperties">
            <summary>
            Gets the indexes.
            </summary>
            <returns>List of IndexMetadataDto</returns>
        </member>
        <member name="T:DragqnLD.WebApi.Controllers.QueriesController">
            <summary>
            Basic operations for Query Definitions - store, load, delete, update
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.QueriesController.#ctor(DragqnLD.Core.Abstraction.IQueryStore,DragqnLD.WebApi.Controllers.PerQueryDefinitionTasksManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Controllers.QueriesController"/> class.
            </summary>
            <param name="queryStore">The query store.</param>
            <param name="perQueryDefinitionTasksManager">The per query definition tasks manager.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.QueriesController.Get">
            <summary>
            Gets all stored query definitions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.QueriesController.Get(System.String)">
            <summary>
            Gets the query definition for the specified definition identifier.
            </summary>
            <param name="definitionId">The definition identifier.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.QueriesController.Post(DragqnLD.WebApi.Models.QueryDefinitionDto)">
            <summary>
            Stores a new query definition.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.QueriesController.Put(System.Int32,DragqnLD.WebApi.Models.QueryDefinitionDto)">
            <summary>
            Stores or updates the query definition with the specified id
            </summary>
            <param name="id">The identifier.</param>
            <param name="queryDefinition">The query definition.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.QueriesController.Delete(System.Int32)">
            <summary>
            Deletes the query definition with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="T:DragqnLD.WebApi.Controllers.PerQueryDefinitionTasksManager">
            <summary>
            Basic tasks overview, to have access to running tasks and their cancellation tokens
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.PerQueryDefinitionTasksManager.GetStatusOfQuery(System.String)">
            <summary>
            Gets the status of query.
            </summary>
            <param name="definitionId">The definition identifier.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.PerQueryDefinitionTasksManager.EnqueueTask(System.String,System.Threading.CancellationToken,System.Func{System.String,System.Threading.CancellationToken,System.Progress{DragqnLD.Core.Abstraction.Query.QueryDefinitionStatus},System.Threading.Tasks.Task})">
            <summary>
            Enqueues the task.
            </summary>
            <param name="definitionId">The definition identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="loadQueryDefinitionTask">The load query definition task.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.PerQueryDefinitionTasksManager.TryCancel(System.String)">
            <summary>
            Tries to cancel a running task.
            </summary>
            <param name="definitionId">The definition identifier.</param>
        </member>
        <member name="P:DragqnLD.WebApi.Controllers.PerQueryDefinitionTasksManager.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Controllers.SearchController">
            <summary>
            Controller that provides searching API
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.SearchController.#ctor(DragqnLD.Core.Abstraction.IDataStore)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Controllers.SearchController"/> class.
            </summary>
            <param name="dataStore">The data store.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.SearchController.SearchEscapedLuceneQuery(System.String)">
            <summary>
            Searchs by the escaped lucene query.
            </summary>
            <param name="escapedQuery">The escapted query.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.SearchController.SearchIndexByLuceneQuery(System.String)">
            <summary>
            Searchs the index by lucene query.
            </summary>
            <param name="indexId">The index identifier.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.SearchController.SearchDynamicIndexByLuceneQuery">
            <summary>
            Searchs the dynamic index by lucene query.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.SearchController.SearchIndexBySparqlQuery(System.String)">
            <summary>
            Searchs the index by sparql query.
            </summary>
            <param name="indexId">The index identifier.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.SearchController.SearchDynamicIndexBySparql">
            <summary>
            Searchs the dynamic index by sparql.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.SearchController.SearchIndexByLuceneQuery(System.String,System.String)">
            <summary>
            Searchs the index by lucene query.
            </summary>
            <param name="indexId">The index identifier.</param>
            <param name="query">The query.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.SearchController.SearchDynamicIndexByLuceneQuery(System.String)">
            <summary>
            Searchs the dynamic index by lucene query.
            </summary>
            <param name="query">The query.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.SearchController.SearchIndexBySparqlQuery(System.String,System.String)">
            <summary>
            Searchs the index by sparql query.
            </summary>
            <param name="indexId">The index identifier.</param>
            <param name="query">The query.</param>
            <returns></returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.SearchController.SearchDynamicIndexBySparql(System.String)">
            <summary>
            Searchs the dynamic index by sparql.
            </summary>
            <param name="query">The query.</param>
            <returns></returns>
        </member>
        <member name="T:DragqnLD.WebApi.Controllers.TasksController">
            <summary>
            Manages backgrounds tasks availible for QueryDefinitions
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.TasksController.#ctor(DragqnLD.Core.Abstraction.IQueryStore,DragqnLD.WebApi.Controllers.PerQueryDefinitionTasksManager,DragqnLD.Core.Implementations.DataLoader)">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Controllers.TasksController"/> class.
            </summary>
            <param name="queryStore">The query store.</param>
            <param name="queryDefinitionLoadTasksManager">The query definition load tasks manager.</param>
            <param name="dataLoader">The data loader.</param>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.TasksController.Process">
            <summary>
            Processes the specified definition identifier.
            </summary>
            <returns>Http Status Code Accepted as the Processing is scheduled for background.</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.TasksController.Cancel">
            <summary>
            Cancels the processing of the query definition.
            </summary>
            <returns>Http Status Code Accepted as it tries to cancel the processing.</returns>
        </member>
        <member name="M:DragqnLD.WebApi.Controllers.TasksController.Status">
            <summary>
            Retuns only status of th especified definition.
            </summary>
            <returns>A <see cref="T:DragqnLD.WebApi.Models.QueryDefinitionStatusDto"/></returns>
        </member>
        <member name="T:DragqnLD.WebApi.Filters.ValidateModelFilter">
            <summary>
            Model validation Filter for incoming WebAPI requests
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Filters.ValidateModelFilter.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Occurs before the action method is invoked.
            </summary>
            <param name="actionContext">The action context.</param>
        </member>
        <member name="T:DragqnLD.WebApi.WebApiApplication">
            <summary>
            The HttpApplication definition of the DragqnLD Server
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.WebApiApplication.Application_Start">
            <summary>
            Called at application start
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Models.DocumentMetadataDto">
            <summary>
            Stored document metadata
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.DocumentMetadataDto.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.PagedDocumentMetadataDto">
            <summary>
            Result of a paged request for documents
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.PagedDocumentMetadataDto.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.PagedDocumentMetadataDto.TotalItems">
            <summary>
            Gets or sets the total documents.
            </summary>
            <value>
            The total documents.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.IndexDefinitionsDto">
            <summary>
            Data transfer object for indexes
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Models.IndexDefinitionsDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Models.IndexDefinitionsDto"/> class.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.IndexDefinitionsDto.Indexes">
            <summary>
            Gets or sets the indexes.
            </summary>
            <value>
            The indexes.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.IndexDefinitionsDto.DefinitionId">
            <summary>
            Gets or sets the definition identifier.
            </summary>
            <value>
            The definition identifier.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.IndexDefinitionMetadataDto">
            <summary>
            Data transfer object for index definition metadata
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.IndexDefinitionMetadataDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.IndexDefinitionMetadataDto.IndexedFields">
            <summary>
            Gets or sets the indexed fields.
            </summary>
            <value>
            The indexed fields.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.IndexDefinitionDto">
            <summary>
            Data transfer object for DragqnLD index definitions in RavenDB
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Models.IndexDefinitionDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Models.IndexDefinitionDto"/> class.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.IndexDefinitionDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.IndexDefinitionDto.RavenMap">
            <summary>
            Gets or sets the raven map.
            </summary>
            <value>
            The raven map.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.IndexDefinitionDto.RavenAnalyzers">
            <summary>
            Gets or sets the raven analyzers.
            </summary>
            <value>
            The raven analyzers.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.IndexDefinitionDto.PropertyNameMap">
            <summary>
            Gets or sets the property name map.
            </summary>
            <value>
            The property name map.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.PropertiesToIndexDto">
            <summary>
            Properties to index data transfer object for index creation
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Models.PropertiesToIndexDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Models.PropertiesToIndexDto"/> class.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.PropertiesToIndexDto.PropertyPaths">
            <summary>
            Gets or sets the property paths that will be part of the index.
            </summary>
            <value>
            The property paths.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.SparqlDto">
            <summary>
            Data transfer object for transporting sparql select queries
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.SparqlDto.SparqlSelectQuery">
            <summary>
            Gets or sets the sparql select query.
            </summary>
            <value>
            The sparql select query.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.IndexablePropertiesDto">
            <summary>
            Data transfer object for transporting indexable properties list
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Models.IndexablePropertiesDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DragqnLD.WebApi.Models.IndexablePropertiesDto"/> class.
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.IndexablePropertiesDto.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.ProgressDto">
            <summary>
            Data transfer object for Progress
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.ProgressDto.TotalCount">
            <summary>
            Gets or sets the total count.
            </summary>
            <value>
            The total count.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.ProgressDto.CurrentItem">
            <summary>
            Gets or sets the current item.
            </summary>
            <value>
            The current item.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.QueryDefinitionDto">
            <summary>
            Defines the a query that can be indexed by the system
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Models.QueryDefinitionMetadataDto">
            <summary>
            Data transfer object for Query Definition Metadata
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.QueryDefinitionMetadataDto.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.QueryDefinitionMetadataDto.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.QueryDefinitionMetadataDto.Description">
            <summary>
            Gets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.QueryDefinitionDto.ConstructQuery">
            <summary>
            Gets the construct query.
            </summary>
            <value>
            The construct query.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.QueryDefinitionDto.ConstructQueryUriParameterName">
            <summary>
            Gets the name of the construct query parameter.
            </summary>
            <value>
            The name of the construct query parameter.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.QueryDefinitionDto.SelectQuery">
            <summary>
            Gets the select query.
            </summary>
            <value>
            The select query.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.QueryDefinitionStatusDto">
            <summary>
            Data transfer object for Query Definition Status
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.QueryDefinitionStatusDto.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.QueryDefinitionStatusDto.DocumentLoadProgress">
            <summary>
            Gets or sets the document load progress.
            </summary>
            <value>
            The document load progress.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.QueryDefinitionWithStatusDto">
            <summary>
            Data transfer object for Query Definition with Status
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.QueryDefinitionWithStatusDto.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.QueryDefinitionWithStatusDto.StoredDocumentCount">
            <summary>
            Gets or sets the stored document count.
            </summary>
            <value>
            The stored document count.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Models.SparqlQueryInfoDto">
            <summary>
            Data transfer object for Sparql Query info
            </summary>
        </member>
        <member name="P:DragqnLD.WebApi.Models.SparqlQueryInfoDto.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.SparqlQueryInfoDto.SparqlEndpoint">
            <summary>
            Gets or sets the sparql endpoint.
            </summary>
            <value>
            The sparql endpoint.
            </value>
        </member>
        <member name="P:DragqnLD.WebApi.Models.SparqlQueryInfoDto.DefaultDataSet">
            <summary>
            Gets or sets the default data set.
            </summary>
            <value>
            The default data set.
            </value>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage
            </summary>
            <example><code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code></example>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>
            </summary>
            <example><code>
            [NotNull] public object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code></example>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/>-like form
            </summary>
            <example><code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code></example>
        </member>
        <member name="M:DragqnLD.WebApi.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as format-string
            </param>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException"/>
            </summary>
            <example><code>
            public void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code></example>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface
             and this method is used to notify that some property value changed
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example><code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               private string _name;
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() =&gt; Property)</c></item>
             <item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted.<br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)
            for method output means that the methos doesn't return normally.<br/>
            <c>canbenull</c> annotation is only applicable for output parameters.<br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row,
            or use single attribute with rows separated by semicolon.<br/>
            </syntax>
            <examples><list>
            <item><code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null, and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code></item>
            <item><code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list></examples>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not
            </summary>
            <example><code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
              private string str = "my string"; // Warning: Localizable string
            }
            </code></example>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            </summary>
            <example><code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
              public void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code></example>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            </summary>
            <example><code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code></example>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly
            (e.g. via reflection, in external library), so this symbol
            will not be marked as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper
            to not mark symbols marked with such attributes as unused
            (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:DragqnLD.WebApi.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used</summary>
        </member>
        <member name="F:DragqnLD.WebApi.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member</summary>
        </member>
        <member name="F:DragqnLD.WebApi.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:DragqnLD.WebApi.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type</summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly
            when marked with <see cref="T:DragqnLD.WebApi.Annotations.MeansImplicitUseAttribute"/>
            or <see cref="T:DragqnLD.WebApi.Annotations.UsedImplicitlyAttribute"/>
            </summary>
        </member>
        <member name="F:DragqnLD.WebApi.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used</summary>
        </member>
        <member name="F:DragqnLD.WebApi.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used</summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled
            when the invoked method is on stack. If the parameter is a delegate,
            indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated
            while the method is executed
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>
            </summary>
            <example><code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
              const int a = 2, b = 2;
              Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code></example>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder
            within a web project. Path can be relative or absolute,
            starting from web root (~)
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that
            the parameter is an MVC controller. If applied to a method,
            the MVC controller name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(String, String)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(String, Object)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that
            the parameter is an MVC partial view. If applied to a method,
            the MVC partial view name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling all inspections
            for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name
            </summary>
            <example><code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code></example>
        </member>
        <member name="T:DragqnLD.WebApi.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>
            </summary>
        </member>
        <member name="T:DragqnLD.WebApi.Services.IContextUrlProvider">
            <summary>
            Provides urls of context for the core, as it could be run in another container
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Services.IContextUrlProvider.GetUrlFor(System.String,System.Web.Http.Routing.UrlHelper)">
            <summary>
            Gets the URL of the Context of the specified definiton.
            </summary>
            <param name="definitionId">The definition identifier.</param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:DragqnLD.WebApi.Services.WebApiContextUrlProvider">
            <summary>
            Provides urls of context for the core, soecificaly to the WEB API in which this is run
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Services.WebApiContextUrlProvider.GetUrlFor(System.String,System.Web.Http.Routing.UrlHelper)">
            <summary>
            Gets the URL of the Context of the specified definiton.
            </summary>
            <param name="definitionId">The definition identifier.</param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:DragqnLD.WebApi.Validation.UrlExAttribute">
            <summary>
            copy of original using System.ComponentModel.DataAnnotations.UrlAttribute, but accepts http://localhost eventually with ports
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Validation.UrlExAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.UrlAttribute"/>class.
            </summary>
        </member>
        <member name="M:DragqnLD.WebApi.Validation.UrlExAttribute.IsValid(System.Object)">
            <summary>
            Validates the format of the specified URL.
            </summary>
            
            <returns>
            true if the URL format is valid or null; otherwise, false.
            </returns>
            <param name="value">The URL to validate.</param>
        </member>
    </members>
</doc>
